---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<api_key>&language=en&query=princess
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Dec 2022 23:37:43 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding,Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 6e842e6c47fda3436ed916882821b6da.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 2UNDNK6GWovoCi3AgXuBjiG4BVS_XNhLSNL8CzsodGN5e1xX06bYYQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Dec 2022 23:37:43 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<api_key>&language=en&query=princess
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Dec 2022 23:37:43 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding,Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 e17e3fc86e2ef9484105cccc5e2c5a36.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 4UM12Dk10cezrUNvB7Vcgq3rAwGySKZ1To23DZQDm1xP2-z1MvT1gw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Dec 2022 23:37:43 GMT
recorded_with: VCR 6.1.0
